// Generated by view binder compiler. Do not edit!
package com.example.sidemenusakura.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.sidemenusakura.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySingleDeliveryDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView customername;

  @NonNull
  public final TextView onFinished;

  @NonNull
  public final TextView onStarted;

  @NonNull
  public final TextView totalprice;

  private ActivitySingleDeliveryDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView customername, @NonNull TextView onFinished, @NonNull TextView onStarted,
      @NonNull TextView totalprice) {
    this.rootView = rootView;
    this.customername = customername;
    this.onFinished = onFinished;
    this.onStarted = onStarted;
    this.totalprice = totalprice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySingleDeliveryDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySingleDeliveryDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_single_delivery_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySingleDeliveryDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.customername;
      TextView customername = rootView.findViewById(id);
      if (customername == null) {
        break missingId;
      }

      id = R.id.onFinished;
      TextView onFinished = rootView.findViewById(id);
      if (onFinished == null) {
        break missingId;
      }

      id = R.id.onStarted;
      TextView onStarted = rootView.findViewById(id);
      if (onStarted == null) {
        break missingId;
      }

      id = R.id.totalprice;
      TextView totalprice = rootView.findViewById(id);
      if (totalprice == null) {
        break missingId;
      }

      return new ActivitySingleDeliveryDetailsBinding((ConstraintLayout) rootView, customername,
          onFinished, onStarted, totalprice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
