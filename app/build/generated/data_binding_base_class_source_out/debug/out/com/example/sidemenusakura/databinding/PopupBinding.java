// Generated by view binder compiler. Do not edit!
package com.example.sidemenusakura.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.sidemenusakura.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText editTextContactnumber;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final EditText editTextName;

  @NonNull
  public final EditText editTextUsername;

  @NonNull
  public final LinearLayout layoutId;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView tile;

  private PopupBinding(@NonNull LinearLayout rootView, @NonNull EditText editTextContactnumber,
      @NonNull EditText editTextEmail, @NonNull EditText editTextName,
      @NonNull EditText editTextUsername, @NonNull LinearLayout layoutId,
      @NonNull Button saveButton, @NonNull TextView tile) {
    this.rootView = rootView;
    this.editTextContactnumber = editTextContactnumber;
    this.editTextEmail = editTextEmail;
    this.editTextName = editTextName;
    this.editTextUsername = editTextUsername;
    this.layoutId = layoutId;
    this.saveButton = saveButton;
    this.tile = tile;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextContactnumber;
      EditText editTextContactnumber = rootView.findViewById(id);
      if (editTextContactnumber == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = rootView.findViewById(id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextName;
      EditText editTextName = rootView.findViewById(id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      EditText editTextUsername = rootView.findViewById(id);
      if (editTextUsername == null) {
        break missingId;
      }

      LinearLayout layoutId = (LinearLayout) rootView;

      id = R.id.saveButton;
      Button saveButton = rootView.findViewById(id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.tile;
      TextView tile = rootView.findViewById(id);
      if (tile == null) {
        break missingId;
      }

      return new PopupBinding((LinearLayout) rootView, editTextContactnumber, editTextEmail,
          editTextName, editTextUsername, layoutId, saveButton, tile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
