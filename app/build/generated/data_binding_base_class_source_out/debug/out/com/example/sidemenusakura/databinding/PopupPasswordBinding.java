// Generated by view binder compiler. Do not edit!
package com.example.sidemenusakura.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.sidemenusakura.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PopupPasswordBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText editTextConfPasswordPopup;

  @NonNull
  public final EditText editTextPasswordPopup;

  @NonNull
  public final LinearLayout layoutId;

  @NonNull
  public final Button saveButtonPassword;

  @NonNull
  public final TextView tile;

  private PopupPasswordBinding(@NonNull LinearLayout rootView,
      @NonNull EditText editTextConfPasswordPopup, @NonNull EditText editTextPasswordPopup,
      @NonNull LinearLayout layoutId, @NonNull Button saveButtonPassword, @NonNull TextView tile) {
    this.rootView = rootView;
    this.editTextConfPasswordPopup = editTextConfPasswordPopup;
    this.editTextPasswordPopup = editTextPasswordPopup;
    this.layoutId = layoutId;
    this.saveButtonPassword = saveButtonPassword;
    this.tile = tile;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PopupPasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PopupPasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.popup_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PopupPasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextConfPasswordPopup;
      EditText editTextConfPasswordPopup = rootView.findViewById(id);
      if (editTextConfPasswordPopup == null) {
        break missingId;
      }

      id = R.id.editTextPasswordPopup;
      EditText editTextPasswordPopup = rootView.findViewById(id);
      if (editTextPasswordPopup == null) {
        break missingId;
      }

      LinearLayout layoutId = (LinearLayout) rootView;

      id = R.id.saveButtonPassword;
      Button saveButtonPassword = rootView.findViewById(id);
      if (saveButtonPassword == null) {
        break missingId;
      }

      id = R.id.tile;
      TextView tile = rootView.findViewById(id);
      if (tile == null) {
        break missingId;
      }

      return new PopupPasswordBinding((LinearLayout) rootView, editTextConfPasswordPopup,
          editTextPasswordPopup, layoutId, saveButtonPassword, tile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
